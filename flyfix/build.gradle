plugins {
    id "com.android.library"
    id "maven-publish"
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file


def getVersionName = { ->
    return "1.0.0" // Replace with version Name
}

def getArtificatId = { ->
    return "flyfix" // Replace with library name ID
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
//                from components.release
                groupId 'com.dixit'
                artifactId getArtificatId()
                version getVersionName()
                artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
            }

            /*debug(MavenPublication) {
    //            from components.debug

                // Replace with your own group ID.
                groupId 'com.dixit'

                // Replace with the name of your library
                artifactId getArtificatId()
                version getVersionName()
                artifact("$buildDir/outputs/aar/${getArtificatId()}-debug.aar")
            }*/
        }

        repositories {
            maven {
                name = "GitHubPackages"
                /** Configure path of your package repository on Github
                 ** Replace GITHUB_USERID with your/organisation Github userID
                 ** and REPOSITORY with the repository name on GitHub
                 */
                url = uri("https://maven.pkg.github.com/dixitsutariyaa/flyfix")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}

android {
    compileSdk 32
    defaultConfig {
        minSdk 25
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //for unzip password protected files
    implementation 'net.lingala.zip4j:zip4j:2.7.0'
}
